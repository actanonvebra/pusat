
# Use the official Golang image as the base image
FROM golang as builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go.mod and go.sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .



# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o main .

# Start a new stage from scratch
FROM golang

# Set the Current Working Directory inside the container
WORKDIR /app

# Install necessary tools
RUN apt-get update 
RUN apt-get upgrade -y
RUN apt-get install -y nmap git
RUN apt-get update 
RUN apt-get upgrade -y

# Clone vulscan repository and create a symlink
RUN git clone https://github.com/scipag/vulscan scipag_vulscan
RUN ln -s /app/scipag_vulscan /usr/share/nmap/scripts/vulscan

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /app/main .

# Expose port 8080 to the outside world
EXPOSE 8080

# Command to run the executable
CMD ["./main"]
